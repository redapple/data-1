{
  "description": "Last year's talk (https://ep2016.europython.eu/conference/talks/writing-unit-tests-for-c-code-in-python)\nshowed you how to use CFFI (https://cffi.readthedocs.io/) to write unit\ntests for C code in Python. This year we will take the concept one step\nfurther and create integration tests covering (almost) the whole firmware\nof a microcontroller, again leveraging the power of CFFI.\n\nBut instead of running the firmware on the controller, it will be executed\non the development machine (that is, a standard x86 architecture),\nallowing for much faster test execution, without requiring the target\nhardware. For this to work, all the hardware-dependent parts of the\nfirmware code need to be replaced by Python code simulating the hardware\nfunctionality, so that all the firmware above this hardware abstraction\nlayer can be executed unmodified.\n\nIn addition, this allows to use advanced security testing tools like\nAddressSanitizer (https://github.com/google/sanitizers/wiki/AddressSanitizer)\nand american fuzzy lop (http://lcamtuf.coredump.cx/afl/)\nthat would not be able to run directly on the microcontroller.",
  "duration": 1853,
  "recorded": "2017-07-10",
  "speakers": [
    "Alexander Steffen"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/-SvmjCWBX10/hqdefault.jpg",
  "title": "Testing microcontroller firmware with Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=-SvmjCWBX10"
    }
  ]
}
