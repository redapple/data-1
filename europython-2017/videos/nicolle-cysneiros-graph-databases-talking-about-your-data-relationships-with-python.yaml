description: |-
  Have you ever considered how many relationships you have in your
  virtual life? Every friend or page liked on Facebook, each connection
  in LinkedIn or Twitter account followed is a new relationship not
  only between two people, but also between their data. In Brazil only,
  we have 160 millions Facebook users. How can we represent and
  manipulate all these relationships? Graph Databases are storage
  systems that use graph structure (nodes and edges) to represent and
  store data in a semantic way.

  This talk will begin approaching the challenge in representing
  relationships in Relational Databases and introducing a more friendly
  solution using graph. The definition of Graph Database, its pros and
  cons and some available tools (Neo4J, OrientDB and TitanDB) will be
  shown during the presentation, as well as how these tools can be
  integrated with Python.

  Outline:


  Relationships

  - Relationships in Relational Databases
  - Graph Definition
  - Graph approach to represent relationships

  Graph Databases

  - Definition
  - Advantages

  Neo4J

  - Usage Examples
  - Integration with Python

  Comparison between Graph Databases

  - Comparison between Neo4J and Relational Database
  - Applications

duration: 2846
recorded: '2017-07-14'
speakers:
- Nicolle Cysneiros
thumbnail_url: https://i.ytimg.com/vi/Fy611BorGTc/hqdefault.jpg
title: 'Graph Databases: Talking about your Data Relationships with Python'
videos:
- type: youtube
  url: https://www.youtube.com/watch?v=Fy611BorGTc

