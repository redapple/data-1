description: |-
  The DevOps methodology is reality. That said, many developers have to
  deal with the process of bringing python applications into
  production.
  One aphorism of the Zen of Python states: ""There should be one-- and
  preferably only one --obvious way to do it.""

  While for the language itself and code being written with it, this
  advice is often strictly followed for good reasons. For the process
  of bringing python into production it is not.

  In the first part of this talk I will give an overview of the
  different steps in the delivery pipeline, from packaging to
  deployment and the various possible implementations for each of those
  steps that emerged over the last years. We will discuss docker, pex,
  wheels, debs, and tars. We will learn why fixed environments are
  crucial and why pip is not yet what it should be. We learn about the
  different runtime environments, from bare metal servers over
  ephemeral container clusters to “serverless” and what they impose on
  the deployment process and scratch on the surface of configuration
  management using tools like Ansible and orchestration frameworks like
  Kubernetes. We will also explore the world beyond python by looking
  into other languages ecosystems and learn how they addressed and
  solved this issue.

  After we understood the requirements and realized that there is not
  ""one obvious way to do it"", this talk is a call to action: Let us
  define and build the “one obvious way” of how we want to bring python
  into production!

duration: 1834
recorded: '2017-07-11'
speakers:
- Sebastian Neubauer
thumbnail_url: https://i.ytimg.com/vi/hnQKsxKjCUo/hqdefault.jpg
title: There should be one obvious way to bring python into production
videos:
- type: youtube
  url: https://www.youtube.com/watch?v=hnQKsxKjCUo

