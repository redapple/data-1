{
  "description": "Asynchronous programming is becoming a hot topic in the Python\ncommunity, especially with the rise of popularity of Python 3 and the\nnew asyncio library in its standard library. However, it can still be\na confusing and mysterious concept. In this talk, I will explain what\nasync programming is, how it works and how it could benefit you. My\ngoal of this talk is that at the end of it, you have an idea about\nwhat we mean when we say asynchronous programming in Python and you\nknow how and when to use it.\n\nIn the first part of the talk, I will dive into what asynchronous\nprogramming is and what it isn't. Explaining the difference between\nIO bound code and CPU bound code.\n\nThen I will explain how this actually works in Python, explaining the\nidea of an event loop, coroutines and cooperative multitasking.\n\nFinally, I will talk about why this may be beneficial, what kind of\napplications can really benefit from this and provide some examples\nfrom my experience.",
  "duration": 1727,
  "recorded": "2017-07-11",
  "speakers": [
    "Jonas Obrist"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/GXS-cR7opQY/hqdefault.jpg",
  "title": "Why you might want to go async",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=GXS-cR7opQY"
    }
  ]
}
