{
  "description": "Cython is not only an excellent and widely used tool to speed up\ncomputational Python code, it\u2019s also a very smart way to talk to\nnative code and libraries. The Cython compiler translates Python code\nto C or C++ code, and supports static type annotations to allow\ndirect use of C/C++ data types and functions. You get the best of\nboth worlds while working with Cython: Python like syntax with\nblazing fast C speed.\n\nThis talk/tutorial by a Python/Cython developer introduces Cython\nprogramming language and leads the participants all the way from\ntheir first Python extension to an efficient integration with native\nC.\n\nTopics covered will be:\n\n1. Using the Cython compiler to build a native extension module\n2. Cython development from Jupyter notebook\n3. Mixing Python with static C types in the Cython language\n4. Calling into native code from Cython code (Brief introduction)\n5. Wrap up: A brief case study -\n   Cyvlfeat: A Cython/Python wrapper for Computer Vision library, VLFeat.\n\nParticipants are expected to have a good understanding of the Python\nlanguage, some basic knowledge about C or C++.  No deep C programming\nknowledge is required, nor is any prior knowledge needed about\nwriting extension modules for the CPython runtime.",
  "duration": 2119,
  "recorded": "2017-07-14",
  "speakers": [
    "Simmi Mourya"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/ZSHL5rkFDQQ/hqdefault.jpg",
  "title": "Scientific computing  using Cython: Best of both Worlds!",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ZSHL5rkFDQQ"
    }
  ]
}
