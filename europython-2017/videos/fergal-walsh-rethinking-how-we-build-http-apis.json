{
  "description": "The Python universe is overflowing with web frameworks, from full\nfeatured batteries included frameworks like Django to micro\nframeworks like Bottle or Flask. They each have their own specific\nfeatures but in the end they are all very similar in their core\nfunctionality of processing requests and generating responses.\n\nIn this talk I will discuss why I felt the need to create yet another\nframework, a pico framework, that specifically focuses on the task of\nbuilding HTTP based APIs for the web.\n\nPico, as it is aptly called, doesn't do templating, ORM, custom\nrouting, authentication, validation, caching, or a million other\nthings. Instead it helps you write clean APIs using simple functions\nand modules with minimal boilerplate. Pico is both opinionated and\nflexible in equal measures so you can focus on what matters; your API\nlogic. Pico helps you to write code that that is simple to get\nstarted, trivial to test, and easy to maintain as your project grows.\n\nAPIs built with Pico are self describing so client code can\nautomatically/dynamically be created. Pico includes both a Python\n&amp; Javascript client but it is also very simple to interact with\nyour API with plain old cURL/Requests/jQuery/etc. It is just a HTTP\nAPI after all.\n\nHaving recently released Pico 2.0, this talk will outline the\nevolution of this framework over the past 7 years and discuss some\nlessons learnt along the way about building HTTP APIs and frameworks.",
  "duration": 2439,
  "recorded": "2017-07-14",
  "speakers": [
    "Fergal Walsh"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/qTHkNkgFJeg/hqdefault.jpg",
  "title": "Rethinking how we build HTTP APIs",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=qTHkNkgFJeg"
    }
  ]
}
