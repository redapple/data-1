{
  "description": "Building web applications is one of the most common uses of Python.\nWith a plethora of different web frameworks aiming at varying audiences,\nit has become a rather simple and well-documented process to develop\nweb applications and web services. So popular it has become that\nthe WSGI specification is the industry standard protocol for\ndeveloping web applications with Python.\n\nBut the WSGI standard is lacking with two major limitations:\n\n- It supports only the \u2018traditional\u2019 synchronous http request-response\n  cycle thus creating a \u2018glass ceiling\u2019 with the amount of requests a\n  single server can handle \u2013 often described as the C10K problem\n- It does not provide an easy and efficient way of developing two-way\n  communication between servers and clients. Often referred to as the\n  real-time web this capability has become increasingly popular\n  with modern web applications.\n\nOver the past decade multiple networking libraries have been developed\nto address these limitations.\nIn this talk we will explore:\n\n- What is an asynchronous web server and how it differs from other,\n  WSGI-based web servers.\n- What is concurrency and how it can help us achieve supreme performance\n  and scalability in our web applications. We will survey noteworthy\n  libraries which will help achieve true concurrency.\n- How to develop real-time communication, using web sockets,\n  with our Javascript application\n- Concerns, limitations and pitfalls when developing asynchronous\n  web applications.",
  "duration": 1750,
  "recorded": "2017-07-11",
  "speakers": [
    "Amit Nabarro"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/1vrUDDqMfR0/hqdefault.jpg",
  "title": "Asynchronous I/O and the real-time web",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=1vrUDDqMfR0"
    }
  ]
}
