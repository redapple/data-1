{
  "description": "In the experimental Sciences, new theories are developed by applying\nthe Scientific method to produce results which are accurate,\nreproducible and reliable. This involves testing the experimental\nsetup to show that it is working as designed and thoroughly documenting\nthe progress of the experiment. Results will not be trusted unless the\nexperiment has been carried out to a suitable standard.\n\nIn computational Science, we should aim to apply the same principles.\nResults should only be trusted if the code that has produced it has\nundergone rigorous testing which demonstrates that it is working as\nintended, and any limitations of the code (e.g. numerical errors)\nare understood and quantified. The code should be well documented\nso that others can understand how it works and run it themselves to\nreplicate results.\n\nUnfortunately, this can be quite challenging. By their very nature,\nscientific codes are built to investigate systems where the behaviour\nis to some extent unknown, so testing them can be quite difficult.\nThey can be very complex, built over a number of years (or even decades!)\nwith contributions from many people. However, even for the most complicated\nof codes there are a number of different tools we can use to build robust,\nreliable code.\n\nIn this talk, I shall look at techniques and tools you can use to build\nmore sustainable scientific code, including testing, continuous integration and documentation.",
  "duration": 2015,
  "recorded": "2017-07-12",
  "speakers": [
    "Alice Harpole"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/3DJHefC6v28/hqdefault.jpg",
  "title": "Sustainable Scientific Software Development",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=3DJHefC6v28"
    }
  ]
}
