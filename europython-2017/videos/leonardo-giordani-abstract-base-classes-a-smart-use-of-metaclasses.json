{
  "description": "This talk shows what Python Abstract Base Classes (ABCs) are and how\nthey can be used to categorise objects and implement a virtual\ninheritance tree. The goal of the talk is to introduce programmers to\nthe concept of ABCs, and to show that metaclasses are not a terribly\ncomplex topic, but something that can be used by normal programmers.\nThe talk is divided in three different \u201clevels of difficulty\u201d, each\nof one going deeper in the technical aspects of the subject.\n\nLevel 1: Polymorphism - Behaviours and delegation - Collections\n\nThe first level is meant to give a quick overview of the collections\npackage and some useful code snippets. Even beginners can benefit of\nthe information given here. To complete this level you only need to\nknow what a try/except block is.\n\nLevel 2: Registering - Abstract Base Classes - Categories\n\nThe second level shows what real and virtual inheritance are,\nexplains what is the meaning of registering and defines Abstract Base\nClasses. To complete this level you need to know what class\ninheritance is (i.e. what class MyList(list) means).\n\nLevel 3: Build your ABCs - Metaclasses - ABSs as interfaces\n\nThe third level shows how to create your own ABCs, why metaclasses\nare involved and why they are not a difficult concept. I will then\nquickly review a possible use of metaclasses as interfaces. To\ncomplete this level you need to know how to instantiate a class, and\nthe difference between class and instance.",
  "duration": 1790,
  "recorded": "2017-07-11",
  "speakers": [
    "Leonardo Giordani"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/I9nXiJQnGsk/hqdefault.jpg",
  "title": "Abstract Base Classes: a smart use of metaclasses",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=I9nXiJQnGsk"
    }
  ]
}
