{
  "description": "The PyPy JIT is a powerful piece of technology which makes Python program\nrunning faster: in this talk, we will see how it helps us to write our\nprograms better without sacrificing performance.\n\nOne of the key to write complex software systems of good quality is to make a\ngood usage of abstractions, to clearly separate the various layers and\ncomponents.  However, often each layer of abstraction adds some cost in terms\nof runtime performance, so we need to struggle finding the best trade-off\nbetween maintainability and speed.\n\nBecause of the way it works, the PyPy JIT naturally removes the cost of most\nabstractions: we will look at real-life examples of how this is possible,\nshowing what the JIT can and can't do. We will also show how this compares to\nother popular systems of optimizing Python code, such as Cython.",
  "duration": 3520,
  "recorded": "2017-07-12",
  "speakers": [
    "Antonio Cuni"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/NQfpHQII2cU/hqdefault.jpg",
  "title": "The joy of PyPy JIT: abstractions for free",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=NQfpHQII2cU"
    }
  ]
}
